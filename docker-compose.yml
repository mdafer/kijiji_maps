#note: add kijiji.localhost to hosts file : 127.0.0.1 kijiji.localhost
# in nginx reverse proxy, redirect to: host.docker.internal, not to localhost
version: "3.8"

services:
  kijiji_maps:
    build: ./app
    restart: always
    container_name: kijiji_maps
    ports:
      - "8082:8082"
    networks:
      - docker-network
    depends_on: 
      - mongo
    volumes:
      - ./app:/usr/src/app
      #Allow node_modules to not exist on original host
      - /usr/src/app/node_modules

  
  mongo:
    container_name: mongo
    restart: always
    image: mongo
    ports:
      - "27017:27017"
    environment:
        MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
        MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
        MONGODB_USERNAME: ${MONGODB_USERNAME}
        MONGODB_PASSWORD: ${MONGODB_PASSWORD}
        MONGO_INITDB_DATABASE: kijiji_maps
    networks:
      - docker-network
    volumes:
      - db-data:/data/db
      - ./docker-scripts/mongo-init.sh:/docker-entrypoint-initdb.d/mongo-init.sh

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    restart: always
    environment:
        - ME_CONFIG_MONGODB_SERVER=mongo
        - ME_CONFIG_MONGODB_PORT=27017
        - ME_CONFIG_MONGODB_ADMINUSERNAME=${MONGO_INITDB_ROOT_USERNAME}
        - ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
        - ME_CONFIG_BASICAUTH_USERNAME=${MONGO_EXPRESS_USERNAME}
        - ME_CONFIG_BASICAUTH_PASSWORD=${MONGO_EXPRESS_PASSWORD}
    networks:
      - docker-network
    ports:
      - "8081:8081"
    depends_on:
      -  "mongo"

networks:
  docker-network:
    external: true
    name: docker-network

volumes:
  db-data: